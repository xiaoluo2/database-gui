/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package database.gui.forms;

import database.gui.Connector;
import database.gui.control.ItemAdder;
import database.gui.control.ItemRemover;
import database.gui.models.RowSetModel;
import javax.swing.JTable;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Xiao Luo
 */
public class AddRemoveUI extends javax.swing.JFrame {
    private ItemAdder adder;
    private ItemRemover remover;

    /**
     * Creates new form AddRemoveUI
     */
    public AddRemoveUI() {
        initComponents();
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        selectionTable.getSelectionModel()
        .addListSelectionListener(new AddRemoveUI.SelectionListener());
    }
    
    public AddRemoveUI(ItemAdder adder) {
        initComponents();
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        this.adder = adder;
        this.addremoveLabel.setText("Items to Add");
        this.addremoveButton.setText("Add");
        selectionTable.setModel(new RowSetModel(adder.getRowSet()));
        selectionTable.getSelectionModel()
        .addListSelectionListener(new AddRemoveUI.SelectionListener());
    }
    
    public AddRemoveUI(ItemRemover remover) {
        initComponents();
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        this.remover = remover;
        this.addremoveLabel.setText("Items to Remove");
        this.addremoveButton.setText("Remove");
        selectionTable.setModel(new RowSetModel(remover.getRowSet()));
        selectionTable.getSelectionModel()
        .addListSelectionListener(new AddRemoveUI.SelectionListener());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        selectionTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        viewTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        addremoveLabel = new javax.swing.JLabel();
        addremoveButton = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        selectionTable.setModel(new RowSetModel(Connector.executeRowSet("SELECT * FROM item_view")));
        jScrollPane1.setViewportView(selectionTable);

        viewTable.setModel(new javax.swing.table.DefaultTableModel());
        jScrollPane2.setViewportView(viewTable);

        jLabel1.setText("Select Item(s) Here");

        addremoveLabel.setText("Items to");

        addremoveButton.setText("Add/Remove");
        addremoveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addremoveButtonActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All" }));

        jLabel3.setText("Category");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(82, 82, 82)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 442, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addremoveLabel)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(addremoveButton))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(addremoveLabel)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(addremoveButton)
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addremoveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addremoveButtonActionPerformed
        if (adder != null) {
            adder.addSelected(selectionTable.getSelectedRows());
        } else if (remover != null) {
            remover.removeSelected(selectionTable.getSelectedRows());
        } else {
            System.out.println("Does nothing");
        }
        dispose();
    }//GEN-LAST:event_addremoveButtonActionPerformed

    private class SelectionListener implements ListSelectionListener {

        @Override
        public void valueChanged(ListSelectionEvent e) {
            if(!(e.getValueIsAdjusting())){
                
                DefaultTableModel viewModel = (DefaultTableModel) viewTable.getModel();
                int[] selected = selectionTable.getSelectedRows();

                // get first two columns
                Object[][] rowData = new Object[selected.length][3];
                for(int i= 0; i < selected.length; i++){
                    for(int col= 0; col < 2; col++){
                        rowData[i][col] = selectionTable.getModel().getValueAt(selected[i], col);
                    }
                    rowData[i][2] = selectionTable.getModel().getValueAt(selected[i], 4);
                }

                // name them Name and ID
                String[] colNames = new String[]{"Name", "ID", "Type"};
                viewModel.setDataVector(rowData, colNames);
            }
        }
    
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addremoveButton;
    private javax.swing.JLabel addremoveLabel;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable selectionTable;
    private javax.swing.JTable viewTable;
    // End of variables declaration//GEN-END:variables
}
